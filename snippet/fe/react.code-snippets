{
	"react-component-template": {
		"prefix": "j:react-comp",
		"body": [
			"import React from 'react'",
			"import PropTypes from 'prop-types'",
			"import s from './style.scss'",
			"",
			"class $1 extends React.Component {",
			"  static propTypes = {",
			"    classNames: PropTypes.string,",
			"  }",
			"",
			"  static defaultProps = {",
			"    classNames: ''",
			"  }",
			"",
			"  constructor(props) {",
			"    super(props)",
			"    this.state = {",
			"    }",
			"  }",
			"",
			"  render() {",
			"    return (",
			"      <div>",
			"        ",
			"      </div>",
			"    )",
			"  }",
			"}",
			"",
			"export default $1",
		]
	},
	"react-component-template-ts": {
		"prefix": "j:react-comp-ts",
		"body": [
			"import React from 'react'",
			"import s from './style.scss'",
			"",
			"export interface I$1Props {",
			"  ",
			"}",
			"",
			"export interface I$1State {",
			"  ",
			"}",
			"",
			"export default class I$1 extends React.Component<I$1Props, I$1State> {",
			"  constructor(props: I$1Props) {",
			"    super(props)",
			"    this.state = {",
			"      ",
			"    }",
			"  }",
			"",
			"  render() {",
			"    return (",
			"      <div>",
			"        ",
			"      </div>",
			"    )",
			"  }",
			"}",
			""
		]
	},
	"react-component-template-ts-4": {
		"prefix": "j:react-comp-ts-4",
		"body": [
			"import React from 'react'",
			"import s from './style.scss'",
			"",
			"export interface I$1Props {",
			"    ",
			"}",
			"",
			"export interface I$1State {",
			"    ",
			"}",
			"",
			"export default class I$1 extends React.Component<I$1Props, I$1State> {",
			"    constructor(props: I$1Props) {",
			"        super(props)",
			"        this.state = {",
			"            ",
			"        }",
			"    }",
			"",
			"    render() {",
			"        return (",
			"          <div>",
			"              ",
			"          </div>",
			"      )",
			"    }",
			"}",
			""
		]
	},
	"getDerivedStateFromProps": {
		"prefix": "reactGetStateFromProps",
		"body": [
			"static getDerivedStateFromProps(nextProps, prevState) {",
			"  const {$1} = nextProps",
			"  if ($1 !== prevState.$1) {",
			"    return {",
			"      ${1}",
			"    }",
			"  }",
			"  ",
			"  return null",
			"}"
		],
		"description": "react set state"
	},
	"setState": {
		"prefix": "j:setState",
		"body": [
			"this.setState({",
			"  $1: $2",
			"})"
		]
	},
	"setState CallBack": {
		"prefix": "j:setStateCB",
		"body": [
			"this.setState({",
			"  $1: $2",
			"}, () => {",
			"  $3",
			"})"
		]
	}
}