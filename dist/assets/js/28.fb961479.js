(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{385:function(_,v,e){"use strict";e.r(v);var t=e(42),r=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[_._v("#")]),_._v(" 性能")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/556204/1662443400929-2bf40146-0753-4d6a-9422-8ce609c06025.png?x-oss-process=image%2Fresize%2Cw_1788%2Climit_0",alt:""}})]),_._v(" "),e("p",[_._v("优秀的性能，给用户流畅的体验，降低用户的流失。本文介绍了提升前端性能的思路和方法。\n​")]),_._v(" "),e("h2",{attrs:{id:"包含内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#包含内容"}},[_._v("#")]),_._v(" 包含内容")]),_._v(" "),e("p",[_._v("性能可分为 加载时性能 和 运行时性能。加载时性能指网页加载过程的性能。运行时性能指网页加载好后，用户在使用过程中的性能。")]),_._v(" "),e("h2",{attrs:{id:"整体步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整体步骤"}},[_._v("#")]),_._v(" 整体步骤")]),_._v(" "),e("p",[_._v("提升性能包含三步:")]),_._v(" "),e("ol",[e("li",[_._v("发现问题。")]),_._v(" "),e("li",[_._v("定位问题。")]),_._v(" "),e("li",[_._v("优化。")])]),_._v(" "),e("h2",{attrs:{id:"_1-发现问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-发现问题"}},[_._v("#")]),_._v(" 1 发现问题")]),_._v(" "),e("p",[_._v("可以通过一些指标来发现性能问题。")]),_._v(" "),e("h3",{attrs:{id:"加载时性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加载时性能"}},[_._v("#")]),_._v(" 加载时性能")]),_._v(" "),e("p",[_._v("度量加载时性能的一个主流指标是： "),e("a",{attrs:{href:"https://web.dev/i18n/zh/vitals/",target:"_blank",rel:"noopener noreferrer"}},[_._v("核心 Web 指标(Core Web Vitals)"),e("OutboundLink")],1),_._v("。")]),_._v(" "),e("blockquote",[e("p",[_._v("核心 Web 指标是适用于所有网页的 Web 指标子集，每位网站所有者都应该测量这些指标，并且这些指标还将显示在所有 Google 工具中。每项核心 Web 指标代表用户体验的一个不同方面，能够进行实际测量，并且反映出以用户为中心的关键结果的真实体验。")])]),_._v(" "),e("p",[_._v("指标包含三个方面：加载性能、交互性和视觉稳定性。具体如下：")]),_._v(" "),e("ol",[e("li",[_._v("Largest Contentful Paint (LCP) ：最大内容绘制，测量加载性能。为了提供良好的用户体验，LCP 应在页面首次开始加载后的2.5 秒内发生。")]),_._v(" "),e("li",[_._v("First Input Delay (FID) ：首次输入延迟，测量交互性。为了提供良好的用户体验，页面的 FID 应为100 毫秒或更短。")]),_._v(" "),e("li",[_._v("Cumulative Layout Shift (CLS) ：累积布局偏移，测量视觉稳定性。为了提供良好的用户体验，页面的 CLS 应保持在 0.1或更少。")])]),_._v(" "),e("p",[_._v("查看当前页面 "),e("code",[_._v("核心 Web 指标")]),_._v("。有多种方式:")]),_._v(" "),e("ol",[e("li",[_._v("在 Chrome 的 Rendering Tab 中查看。")]),_._v(" "),e("li",[_._v("npm 包： "),e("a",{attrs:{href:"https://www.npmjs.com/package/web-vitals",target:"_blank",rel:"noopener noreferrer"}},[_._v("web-vitals"),e("OutboundLink")],1),_._v("。")])]),_._v(" "),e("p",[_._v("感兴趣也可以了解下 "),e("a",{attrs:{href:"https://www.apdex.org/",target:"_blank",rel:"noopener noreferrer"}},[_._v("Apdex 应用性能指数"),e("OutboundLink")],1),_._v("。")]),_._v(" "),e("blockquote",[e("p",[_._v("Apdex (Application Performance Index) 应用性能指数, 也被称为 满意度。是由 Apdex 联盟开放的用于评估应用性能的工业标准。标准从用户的角度出发，将对应用响应时间的表现，转为用户对于应用性能的可量化为范围为 0 - 1 的满意度评价。")])]),_._v(" "),e("h3",{attrs:{id:"运行时性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行时性能"}},[_._v("#")]),_._v(" 运行时性能")]),_._v(" "),e("p",[_._v("度量加载时性能的一个主流指标是：RAIL 模型。RAIL 由四个方面组成： Response，Animation，Idel，Load。具体如下：")]),_._v(" "),e("ol",[e("li",[_._v("Response < 100毫秒。")]),_._v(" "),e("li",[_._v("Anmiation: FPS 接近 60。")]),_._v(" "),e("li",[_._v("Idel：任务完成时间 < 50毫秒。")]),_._v(" "),e("li",[_._v("Page Load: 重要内容的加载时间 < 1秒。")])]),_._v(" "),e("h2",{attrs:{id:"_2-定位问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-定位问题"}},[_._v("#")]),_._v(" 2 定位问题")]),_._v(" "),e("h3",{attrs:{id:"加载时性能-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加载时性能-2"}},[_._v("#")]),_._v(" 加载时性能")]),_._v(" "),e("p",[_._v("可以通过 "),e("a",{attrs:{href:"https://www.webpagetest.org/",target:"_blank",rel:"noopener noreferrer"}},[_._v("WebpageTest"),e("OutboundLink")],1),_._v(" 和 Chrome Lighthouse 来知道整体的加载时性能情况和定位问题。")]),_._v(" "),e("p",[_._v("可以通过 Chrome Network 来知道网络资源加载情况。")]),_._v(" "),e("p",[_._v("如果用的 Webpack， 用 Webpack Analysis 找到一些大的 chunk。")]),_._v(" "),e("h3",{attrs:{id:"运行时性能-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行时性能-2"}},[_._v("#")]),_._v(" 运行时性能")]),_._v(" "),e("p",[_._v("可以通过 Chrome 的 Performance Tab，实时 FPS 图，Memory Tab 来定位问题。")]),_._v(" "),e("h2",{attrs:{id:"_3-优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-优化"}},[_._v("#")]),_._v(" 3 优化")]),_._v(" "),e("h3",{attrs:{id:"加载时性能-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加载时性能-3"}},[_._v("#")]),_._v(" 加载时性能")]),_._v(" "),e("p",[_._v("分析整个加载的链路。具体方法如下：")]),_._v(" "),e("ol",[e("li",[_._v("减少请求次数。\n"),e("ol",[e("li",[_._v("缓存。")]),_._v(" "),e("li",[_._v("接口的缓存。")]),_._v(" "),e("li",[_._v("文件的离线缓存。")]),_._v(" "),e("li",[_._v("内联体积小(<5KB)的图片。将图片转化成 Base64 字符串。")]),_._v(" "),e("li",[_._v("合并。\n"),e("ol",[e("li",[_._v("文件合并。")]),_._v(" "),e("li",[_._v("接口合并。 技术：GraphQL。BFF。")])])])])]),_._v(" "),e("li",[_._v("减少体积。\n"),e("ol",[e("li",[_._v("压缩。")]),_._v(" "),e("li",[_._v("传输时的压缩。GZip，Brotli，Zopfli 等压缩算法。其中 Brotli 的压缩率比 GZip 算法高。")]),_._v(" "),e("li",[_._v("文件内容的压缩。 比如，压缩 js 用 UglifyJS，压缩图片 等。")]),_._v(" "),e("li",[_._v("图片：选择合适的文件格式。图片： Webp，jpeg，png。")]),_._v(" "),e("li",[_._v("代码：去掉不必要的代码。")]),_._v(" "),e("li",[_._v("去掉没用的代码。工具：tree-shaking 等。")]),_._v(" "),e("li",[_._v("体积大的代码：拆分(code-splitting)。特别的框架和业务代码合在一起的，抽取出框架代码(webpack vendor)。")]),_._v(" "),e("li",[_._v("有些包，体积挺大，但在业务中只用了该包少量的功能，考虑去掉。")])])]),_._v(" "),e("li",[_._v("提升传输速度。\n"),e("ol",[e("li",[_._v("使用 CDN。")]),_._v(" "),e("li",[_._v("加载的优先级。区别核心内容和增强体验的内容。")]),_._v(" "),e("li",[_._v("首屏。")]),_._v(" "),e("li",[_._v("核心功能。")]),_._v(" "),e("li",[_._v("按需加载。")]),_._v(" "),e("li",[_._v("并行数量的控制。")]),_._v(" "),e("li",[_._v("使用更高版本的 HTTP 协议。HTTP/2，HTTP/3。")]),_._v(" "),e("li",[_._v("提升服务器端的响应速度。")])])])]),_._v(" "),e("h3",{attrs:{id:"运行时性能-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行时性能-3"}},[_._v("#")]),_._v(" 运行时性能")]),_._v(" "),e("ol",[e("li",[_._v("渲染优化。\n"),e("ol",[e("li",[_._v("减少回流和重绘\n"),e("ol",[e("li",[_._v("复杂的动画，用绝对定位来脱离文档流，来减少重绘。")])])]),_._v(" "),e("li",[_._v("组件缓存。")]),_._v(" "),e("li",[_._v("减少更新 DOM 的数量。 Visual DOM。")]),_._v(" "),e("li",[_._v("减少 DOM 的数量。")])])]),_._v(" "),e("li",[_._v("CSS 的优化。\n"),e("ol",[e("li",[_._v("选择器的优化。\n"),e("ol",[e("li",[_._v("右侧指定性强的。")]),_._v(" "),e("li",[_._v("减少层级。")])])])])]),_._v(" "),e("li",[_._v("计算优化\n"),e("ol",[e("li",[_._v("防止计算密集型的的内容卡UI。放在后台算(Service work) 或给服务器做。")]),_._v(" "),e("li",[_._v("节流和防抖。")]),_._v(" "),e("li",[_._v("内存泄漏。")])])])]),_._v(" "),e("p",[_._v("针对框架的优化：")]),_._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/Sx9HiNgxOV6w0hNdLksonw",target:"_blank",rel:"noopener noreferrer"}},[_._v("React 运行时性能优化之减少渲染组件的次数"),e("OutboundLink")],1)]),_._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/nJljYPXnRSSrxOybDEkhbA",target:"_blank",rel:"noopener noreferrer"}},[_._v("Vue 运行时性能优化之减少渲染组件的次数"),e("OutboundLink")],1)])]),_._v(" "),e("p",[_._v("其他：")]),_._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/fwgFPvbgF6sFB97qRitHlQ",target:"_blank",rel:"noopener noreferrer"}},[_._v("提高页面渲染速度的 3 个 CSS 技巧"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=r.exports}}]);